// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    Mux16(a=false, b=in, sel=a, out=aout);
    Mux16(a=false, b=in, sel=b, out=bout);
    Mux16(a=false, b=in, sel=c, out=cout);
    Mux16(a=false, b=in, sel=d, out=dout);
    Mux16(a=false, b=in, sel=e, out=eout);
    Mux16(a=false, b=in, sel=f, out=fout);
    Mux16(a=false, b=in, sel=g, out=gout);
    Mux16(a=false, b=in, sel=h, out=hout);

    Register(in=aout, load=load, out=out);
    Register(in=bout, load=load, out=out);
    Register(in=cout, load=load, out=out);
    Register(in=dout, load=load, out=out);
    Register(in=eout, load=load, out=out);
    Register(in=fout, load=load, out=out);
    Register(in=gout, load=load, out=out);
    Register(in=hout, load=load, out=out);
}
