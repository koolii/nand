// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    // address xxxyyy
    // xxxがどのRAM8を使うか指定
    // yyyがRAM8の中身を更に指定
    // 上記のような再帰的なビットへのアクセスとなる
    PARTS:
    // Put your code here:
    RAM8(in=in, load=load, address=address[0..2]);
    RAM8(in=in, load=load, address=address[0..2]);
    RAM8(in=in, load=load, address=address[0..2]);
    RAM8(in=in, load=load, address=address[0..2]);
    RAM8(in=in, load=load, address=address[0..2]);
    RAM8(in=in, load=load, address=address[0..2]);
    RAM8(in=in, load=load, address=address[0..2]);
    RAM8(in=in, load=load, address=address[0..2]);
}
